# Generated by Django 5.1.5 on 2025-02-19 21:44

import apps.core.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        default=apps.core.models.User.generate_unique_id,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                ("avatar", models.URLField(blank=True, null=True)),
                ("email", models.EmailField(max_length=50, unique=True)),
                ("status", models.BooleanField(default=False)),
                ("deleted_user", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Tournaments",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("join_code", models.CharField(max_length=6, unique=True)),
                ("tournament_name", models.CharField(max_length=50)),
                ("start_date", models.DateTimeField(auto_now=True)),
                ("end_date", models.DateTimeField(auto_now=True)),
                ("current_round", models.IntegerField(default=1)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("ready", "Ready"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("max_players", models.IntegerField(default=8)),
                (
                    "players",
                    models.ManyToManyField(
                        related_name="tournaments_name", to="core.user"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="History",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("match_id", models.UUIDField(blank=True, default=None, null=True)),
                ("date", models.DateTimeField(auto_now=True)),
                ("result_user", models.IntegerField(default=0)),
                ("result_opponent", models.IntegerField(default=0)),
                (
                    "type_match",
                    models.CharField(
                        choices=[
                            ("tournament_quarter", "Tournament Quarter Finals"),
                            ("tournament_semi", "Tournament Semi Finals"),
                            ("tournament_final", "Tournament Finals"),
                            ("match", "Local Match"),
                        ],
                        max_length=50,
                    ),
                ),
                ("local_match", models.BooleanField(default=True)),
                ("tournament_match_number", models.IntegerField(blank=True, null=True)),
                (
                    "tournament_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.tournaments",
                    ),
                ),
                (
                    "opponent_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="opponent_history",
                        to="core.user",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Friends",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("declined", "Declined"),
                            ("accepted", "Accepted"),
                            ("sent", "Sent"),
                        ],
                        default="sent",
                    ),
                ),
                (
                    "friend_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="friends_as_friend",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="friends_as_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Stats",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("victories", models.IntegerField(default=0)),
                ("defeats", models.IntegerField(default=0)),
                ("total_matches", models.IntegerField(default=0)),
                ("total_tournaments", models.IntegerField(default=0)),
                ("tournaments_victories", models.IntegerField(default=0)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tournaments",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("tournament_name", models.CharField(max_length=50)),
                ("start_date", models.DateTimeField(auto_now=True)),
                ("end_date", models.DateTimeField(auto_now=True)),
                (
                    "players",
                    models.ManyToManyField(
                        related_name="tournaments_name", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="History",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateTimeField(auto_now=True)),
                ("result_user", models.IntegerField()),
                ("result_opponent", models.IntegerField()),
                ("type_match", models.CharField(max_length=50)),
                ("position_match", models.IntegerField()),
                ("position_tournament", models.IntegerField(blank=True, null=True)),
                (
                    "opponent_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="opponent_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tournament_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.tournaments",
                    ),
                ),
            ],
        ),
    ]
